
stages:
  - build
  - test
  - docker-deploy
  - eks-deploy

variables:
  DOCKER_IMAGE: kuunyangna/my-java-app
  KUBE_CONFIG_PATH: /tmp/kubeconfig

build:
  stage: build
  image: maven:3.9.6-eclipse-temurin-17
  script:
    - echo "Building project..."
    - mvn clean package -DskipTests
  artifacts:
    paths:
      - target/*.jar
  only:
    - main

test:
  stage: test
  image: maven:3.9.6-eclipse-temurin-17
  script:
    - echo "Running tests..."
    - mvn test
  dependencies:
    - build
  only:
    - main

docker-deploy:
  stage: docker-deploy
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
  script:
    - echo "Logging into Docker Hub..."
    - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
    - echo "Building Docker image..."
    - docker build -t $DOCKER_IMAGE:latest .
    - echo "Pushing Docker image..."
    - docker push $DOCKER_IMAGE:latest
  only:
    - main

eks-deploy:
  stage: eks-deploy
  image: ubuntu:22.04
  before_script:
    
    - apt-get update && apt-get install -y curl unzip wget
   
    - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    - unzip awscliv2.zip
    - ./aws/install
    - aws --version
  
    - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    - install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
    - kubectl version --client
   
    - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - aws configure set default.region $AWS_DEFAULT_REGION
    
    - aws eks update-kubeconfig --name my-eks-cluster --region $AWS_DEFAULT_REGION --kubeconfig $KUBE_CONFIG_PATH
    - export KUBECONFIG=$KUBE_CONFIG_PATH
  script:
    - echo "Deploying to EKS..."
    - kubectl apply -f k8s/deployment.yaml
    - kubectl apply -f k8s/service.yaml
    - kubectl rollout status deployment/my-java-app
  only:
    - main
